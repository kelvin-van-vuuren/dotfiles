# Basic vars
set shellopts '-eu'
set ifs "\n"
set scrolloff 10
set icons
set period 1
set hidden true
set cleaner '~/.config/lf/cleaner'
set previewer '~/.config/lf/scope'

cmd mkdir $mkdir -p "$(echo $* | tr ' ' '\ ')"

cmd mkfile %{{
  printf "File Name: "
  read ans
  touch $ans
}}

cmd extract %{{
	printf "extract '$fx'? "
    read ans
	[ $ans = "y" ] && aunpack $fx
    printf ""
}}

cmd delete %{{
    filetype=""
    if [ -d $fx ]; then
        filetype="directory"
    elif [ -f $fx ]; then
        filetype="file"
    fi
	printf "rm: delete $filetype '$fx'? "
    read ans
	[ $ans = "y" ] && rm -rf -- $fx
    printf ""
}}

cmd zip %{{
    printf "create zip of '$fx'? "
    read ans
    [ $ans = "y" ] && zip -r $fx".zip" ${fx##*/}
    printf ""
}}

# Bindings
map . set hidden!

map <c-f> $lf -remote "send $id select '$(fzf)'"
map gh
map m
map D delete
map E extract
map md push :mkdir<space>
map mf mkfile
map <c-r> reload
map <c-s> set hidden!
map <enter> shell
map x $$f
map X !$f

map A rename # at the very end
map C push A<c-u> # new rename
map I push A<c-a> # at the very beginning
map i push A<a-b><a-b><a-f> # before extension
map a push A<a-b> # after extension
map B bulkrename
map Z zip

map <c-e> down
map <c-y> up
map V push :!nvim<space>

map W $setsid -f $TERMINAL >/dev/null 2>&1

map Y $printf "%s" "$fx" | xclip -selection clipboard # copy path
